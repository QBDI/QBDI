name: PyQBDI OSX package

on:
  push:
    branches:
      - master
      - dev-next
  workflow_dispatch:

jobs:
  build-llvm:
    runs-on: macos-10.15
    env:
      QBDI_PLATFORM: 'osx'
      QBDI_ARCH: 'X86_64'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      QBDI_LLVM_VERSION: '10.0.1'
    steps:
      - name: Install system dependencies
        run: |
          brew install cmake ninja ccache
          python3 -m pip install --upgrade pip setuptools wheel
      - name: checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        id: cache-ccache
        with:
          path: |
            ~/.ccache
          key: ccache-osx-X86_64-${{ hashFiles('.github/workflows/ccache.conf') }}
      - if: steps.cache-ccache.outputs.cache-hit != 'true'
        run: |
          mkdir ~/.ccache
          cp .github/workflows/ccache.conf ~/.ccache/ccache.conf
      - name: Cache llvm
        uses: actions/cache@v2
        id: cache-llvm
        with:
          path: |
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/build
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/src/llvm-${{ env.QBDI_LLVM_VERSION }}.src.tar.xz
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/src/qbdi-llvm-deps
          key: llvm-${{ env.QBDI_LLVM_VERSION }}-${{ runner.os }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}-${{ hashFiles('cmake/llvm/QBDI_llvm.cmake') }}-${{ env.MACOSX_DEPLOYMENT_TARGET }}
      - name: build llvm
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_CROSSCOMPILING=FALSE \
                -DQBDI_PLATFORM=${QBDI_PLATFORM} \
                -DQBDI_ARCH=${QBDI_ARCH} \
                -DQBDI_LLVM_PREFIX="${{ github.workspace }}/deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/" \
                ..
          ninja llvm

  build-pyqbdi:
    needs: build-llvm
    runs-on: macos-10.15
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    env:
      QBDI_PLATFORM: 'osx'
      QBDI_ARCH: 'X86_64'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
      QBDI_LLVM_VERSION: '10.0.1'
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          brew install cmake ninja ccache
          python3 -m pip install --upgrade pip setuptools wheel
      - name: checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        id: cache-ccache-python
        with:
          path: |
            ~/.ccache
          key: ccache-osx-X86_64-${{ hashFiles('.github/workflows/ccache.conf') }}-python-${{ matrix.python-version }}
          restore-keys: |
            ccache-osx-X86_64-${{ hashFiles('.github/workflows/ccache.conf') }}
      - if: steps.cache-ccache-python.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.ccache
          cp .github/workflows/ccache.conf ~/.ccache/ccache.conf
      - name: Cache llvm
        uses: actions/cache@v2
        id: cache-llvm-python
        with:
          path: |
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/build
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/src/llvm-${{ env.QBDI_LLVM_VERSION }}.src.tar.xz
            deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/src/qbdi-llvm-deps
          key: llvm-${{ env.QBDI_LLVM_VERSION }}-${{ runner.os }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}-${{ hashFiles('cmake/llvm/QBDI_llvm.cmake') }}-${{ env.MACOSX_DEPLOYMENT_TARGET }}-python-${{ matrix.python-version }}
          restore-keys: |
            llvm-${{ env.QBDI_LLVM_VERSION }}-${{ runner.os }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}-${{ hashFiles('cmake/llvm/QBDI_llvm.cmake') }}-${{ env.MACOSX_DEPLOYMENT_TARGET }}
      - run: mkdir -p build
      - name: Build PyQBDI ${{ matrix.python-version }}
        env:
          QBDI_LLVM_PREFIX: "${{ github.workspace }}/deps/LLVM-${{ env.QBDI_LLVM_VERSION }}-${{ env.QBDI_PLATFORM }}-${{ env.QBDI_ARCH }}/"
        run: |
          python3 --version
          python3 setup.py bdist_wheel
      - name: Export package
        uses: actions/upload-artifact@v2
        with:
          name: PyQBDI OSX X86_64 ${{ matrix.python-version }}
          path: dist/*
